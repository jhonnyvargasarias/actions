name: 'Create Pre-release'
description: 'Creates a pre-release on GitHub with release notes'

inputs:
  github_token:
    description: 'GitHub token'
    required: true

  build_version:
    description: 'Build version'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '20'

    - name: Get last tag
      id: get_last_tag
      uses: actions/github-script@v7
      with:
        github-token: ${{ inputs.github_token }}
        script: |
          const { data: tags } = await github.rest.repos.listTags({
            owner: context.repo.owner,
            repo: context.repo.repo,
            per_page: 1,
          });

          if (tags.length > 0) {
            const lastTag = tags[0].name;
            core.setOutput('last_tag', lastTag);
          } else {
            core.setOutput('last_tag', '');
          }

    - name: Get commit range since last tag
      id: get_commit_range
      uses: actions/github-script@v7
      with:
        github-token: ${{ inputs.github_token }}
        script: |
          const lastTag = core.getInput('last_tag');

          const { data } = lastTag
            ? (
              await github.rest.repos.compareCommits({
                owner: context.repo.owner,
                repo: context.repo.repo,
                base: lastTag,
                head: context.sha,
              })
            )
            : (
              await github.rest.repos.listCommits({
                owner: context.repo.owner,
                repo: context.repo.repo,
                sha: context.sha,
              })
            );

          const commits = data.map((commit) => ({
            sha: commit.sha.slice(0, 7),
            author: `@${commit.author.login}`,
            message: commit.commit.message,
          }))

          core.setOutput('commits', JSON.stringify(commits));

    - name: Prepare release notes
      id: prepare_release_notes
      uses: actions/github-script@v7
      with:
        github-token: ${{ inputs.github_token }}
        script: |
          const commitsJson = '${{ steps.get_commit_range.outputs.commits }}';
          const commits = JSON.parse(commitsJson);

          let releaseNotes = '## Release Information\n';
          releaseNotes += '| Author       | Commit          | Message            |\n';
          releaseNotes += '|--------------|-----------------|--------------------|\n';
          for (const commit of commits) {
            releaseNotes += `| ${commit.author} | ${commit.sha} | ${commit.message} |\n`;
          }

          core.setOutput('release_notes', releaseNotes);

    - name: Prepare pre-release
      id: prepare_pre_release
      uses: actions/github-script@v7
      with:
        github-token: ${{ inputs.github_token }}
        script: |
          const version = core.getInput('build_version');
          const releaseNotes = `${{ steps.prepare_release_notes.outputs.release_notes }}`;

          const { data } = await github.rest.repos.createRelease({
            owner: context.repo.owner,
            repo: context.repo.repo,
            tag_name: version,
            name: `v${version}`,
            body: releaseNotes,
            prerelease: true,
            draft: false,
          });

          core.setOutput('release_id', data.id);
